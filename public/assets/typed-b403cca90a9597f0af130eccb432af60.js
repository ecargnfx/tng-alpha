!function(e){"use strict";var s=function(s,t){self=this,self.el=e(s),self.options=e.extend({},e.fn.typed.defaults,t),self.text=self.el.text(),self.typeSpeed=self.options.typeSpeed,self.backDelay=self.options.backDelay,self.strings=self.options.strings,self.strPos=0,self.arrayPos=0,self.string=self.strings[self.arrayPos],self.stopNum=0,self.stopArray=self.strings.length-1,self.init()};s.prototype={constructor:s,init:function(){self.typewrite(self.string,self.strPos),self.el.after('<span id="typed-cursor">|</span>')},typewrite:function(e,s){var t=Math.round(70*Math.random())+self.typeSpeed;setTimeout(function(){self.arrayPos<self.strings.length&&(self.el.text(self.text+e.substr(0,s)),s>e.length&&self.arrayPos<self.stopArray?(clearTimeout(),setTimeout(function(){self.backspace(e,s)},self.backDelay)):(s++,self.typewrite(e,s),self.arrayPos==self.stopArray&&s==e.length&&(self.options.callback(),clearTimeout())))},t)},backspace:function(e,s){var t=Math.round(70*Math.random())+self.typeSpeed;setTimeout(function(){self.el.text(self.text+e.substr(0,s)),s>self.stopNum?(s--,self.backspace(e,s)):s<=self.stopNum&&(clearTimeout(),self.arrayPos=self.arrayPos+1,self.typewrite(self.strings[self.arrayPos],s))},t)}},e.fn.typed=function(t){return this.each(function(){var l=e(this),a=l.data("typed"),f="object"==typeof t&&t;a||l.data("typed",a=new s(this,f)),"string"==typeof t&&a[t]()})},e.fn.typed.defaults={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],typeSpeed:0,backDelay:500,callback:function(){}}}(window.jQuery);